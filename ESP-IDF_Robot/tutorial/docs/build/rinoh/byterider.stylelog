---------------------------------- page 1 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### DownExpandingContainer('title')
  StaticGroupedFlowables()
    Paragraph('Byte Rider', style='title page title')
         > (0,0,1,0,2) title page title [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Byte Rider')
    Paragraph('Release 06-2025', style='title page subtitle')
         > (0,0,1,0,2) title page subtitle [Sphinx] > title page title
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Release 06-2025')
    Paragraph('Alexander B', style='title page author')
         > (0,0,1,0,2) title page author [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Alexander B')
    Paragraph('Jul 19, 2025', style='title page date')
         > (0,0,1,0,2) title page date [Sphinx] > DEFAULT
           (0,0,0,0,2) body [Sphinx] > default
        SingleStyledText('Jul 19, 2025')
---------------------------------- page i ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Table of Contents', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('Table of Contents')
        StringField('Table of Contents')
          SingleStyledText('Table of Contents')
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    TableOfContentsSection(style='table of contents')
         > (0,0,1,0,1) table of contents section [Sphinx] > DEFAULT
           (0,0,0,1,1) chapter [Sphinx] > DEFAULT
      TableOfContents()   table of contents
           > (0,0,0,0,2) table of contents [Sphinx] > default
        TableOfContentsEntry('	List of Figures	iii')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('')
            Tab('	')
            ReferenceField('List of Figures')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              StringField('List of Figures')
                SingleStyledText('List of Figures')
            Tab('	')
            ReferenceField('iii')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('iii')
        TableOfContentsEntry('1	OVERVIEW	3')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1')
            Tab('	')
            ReferenceField('OVERVIEW')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('OVERVIEW')
                MixedStyledText('OVERVIEW')
                  SingleStyledText('OVERVIEW')
            Tab('	')
            ReferenceField('3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
        TableOfContentsEntry('1.1	ABSTRACT	3')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('1.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('1.1')
            Tab('	')
            ReferenceField('ABSTRACT')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('ABSTRACT')
                MixedStyledText('ABSTRACT')
                  SingleStyledText('ABSTRACT')
            Tab('	')
            ReferenceField('3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
        TableOfContentsEntry('2	HOW DOES IT WORK?	5')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2')
            Tab('	')
            ReferenceField('HOW DOES IT WORK?')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('HOW DOES IT WORK?')
                MixedStyledText('HOW DOES IT WORK?')
                  SingleStyledText('HOW DOES IT WORK?')
            Tab('	')
            ReferenceField('5')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
        TableOfContentsEntry('2.1	Reserved Pins & GPIOs	5')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.1')
            Tab('	')
            ReferenceField('Reserved Pins & GPIOs')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Reserved Pins & GPIOs')
                MixedStyledText('Reserved Pins & GPIOs')
                  SingleStyledText('Reserved Pins & GPIOs')
            Tab('	')
            ReferenceField('5')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
        TableOfContentsEntry('2.2	Fusion of Software with Hard...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.2')
            Tab('	')
            ReferenceField('Fusion of Software with Hardware')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Fusion of Software with Hardware')
                MixedStyledText('Fusion of Software with Hardware')
                  SingleStyledText('Fusion of Software with Hardware')
            Tab('	')
            ReferenceField('8')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('8')
        TableOfContentsEntry('2.3	Schematic	9')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('2.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('2.3')
            Tab('	')
            ReferenceField('Schematic')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Schematic')
                MixedStyledText('Schematic')
                  SingleStyledText('Schematic')
            Tab('	')
            ReferenceField('9')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('9')
        TableOfContentsEntry('3	DATA STRUCTS	11')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3')
            Tab('	')
            ReferenceField('DATA STRUCTS')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('DATA STRUCTS')
                MixedStyledText('DATA STRUCTS')
                  SingleStyledText('DATA STRUCTS')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
        TableOfContentsEntry('3.1	Data Payload	11')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('3.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('3.1')
            Tab('	')
            ReferenceField('Data Payload')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Data Payload')
                MixedStyledText('Data Payload')
                  SingleStyledText('Data Payload')
            Tab('	')
            ReferenceField('11')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('11')
        TableOfContentsEntry('4	TRANSMITTER	13')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4')
            Tab('	')
            ReferenceField('TRANSMITTER')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('TRANSMITTER')
                MixedStyledText('TRANSMITTER')
                  SingleStyledText('TRANSMITTER')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('4.1	Configuration Variables	13')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.1')
            Tab('	')
            ReferenceField('Configuration Variables')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Configuration Variables')
                MixedStyledText('Configuration Variables')
                  SingleStyledText('Configuration Variables')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('4.2	Reading Joystick x- and y- A...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.2')
            Tab('	')
            ReferenceField('Reading Joystick x- and y- Axis ...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Reading Joystick x- and y- Axis ...')
                MixedStyledText('Reading Joystick x- and y- Axis ...')
                  SingleStyledText('Reading Joystick x- and y- Axis ...')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('4.3	Sending & Ecapsulating Data	...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.3')
            Tab('	')
            ReferenceField('Sending & Ecapsulating Data')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Sending & Ecapsulating Data')
                MixedStyledText('Sending & Ecapsulating Data')
                  SingleStyledText('Sending & Ecapsulating Data')
            Tab('	')
            ReferenceField('13')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('13')
        TableOfContentsEntry('4.4	Main Function	14')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('4.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('4.4')
            Tab('	')
            ReferenceField('Main Function')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Main Function')
                MixedStyledText('Main Function')
                  SingleStyledText('Main Function')
            Tab('	')
            ReferenceField('14')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('14')
        TableOfContentsEntry('5	RECEIVER	15')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('5')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5')
            Tab('	')
            ReferenceField('RECEIVER')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('RECEIVER')
                MixedStyledText('RECEIVER')
                  SingleStyledText('RECEIVER')
            Tab('	')
            ReferenceField('15')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('15')
        TableOfContentsEntry('5.1	Configuration Variables	15')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.1')
            Tab('	')
            ReferenceField('Configuration Variables')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Configuration Variables')
                MixedStyledText('Configuration Variables')
                  SingleStyledText('Configuration Variables')
            Tab('	')
            ReferenceField('15')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('15')
        TableOfContentsEntry('5.2	Receiving & Extracting Data	...')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.2')
            Tab('	')
            ReferenceField('Receiving & Extracting Data')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Receiving & Extracting Data')
                MixedStyledText('Receiving & Extracting Data')
                  SingleStyledText('Receiving & Extracting Data')
            Tab('	')
            ReferenceField('15')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('15')
        TableOfContentsEntry('5.3	Main Function	16')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('5.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('5.3')
            Tab('	')
            ReferenceField('Main Function')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Main Function')
                MixedStyledText('Main Function')
                  SingleStyledText('Main Function')
            Tab('	')
            ReferenceField('16')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('16')
        TableOfContentsEntry('6	WORK-IN-PROGRESS WALK THROUGH	...')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('6')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6')
            Tab('	')
            ReferenceField('WORK-IN-PROGRESS WALK THROUGH')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                  SingleStyledText('WORK-IN-PROGRESS WALK THROUGH')
            Tab('	')
            ReferenceField('17')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('17')
        TableOfContentsEntry('6.1	Finished Work	17')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.1')
            Tab('	')
            ReferenceField('Finished Work')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Finished Work')
                MixedStyledText('Finished Work')
                  SingleStyledText('Finished Work')
            Tab('	')
            ReferenceField('17')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('17')
        TableOfContentsEntry('6.2	Chassis	18')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.2')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.2')
            Tab('	')
            ReferenceField('Chassis')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Chassis')
                MixedStyledText('Chassis')
                  SingleStyledText('Chassis')
            Tab('	')
            ReferenceField('18')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('18')
        TableOfContentsEntry('6.3	Wiring	19')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.3')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.3')
            Tab('	')
            ReferenceField('Wiring')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Wiring')
                MixedStyledText('Wiring')
                  SingleStyledText('Wiring')
            Tab('	')
            ReferenceField('19')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('19')
        TableOfContentsEntry('6.4	Motor Wires Harness	20')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('6.4')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6.4')
            Tab('	')
            ReferenceField('Motor Wires Harness')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Motor Wires Harness')
                MixedStyledText('Motor Wires Harness')
                  SingleStyledText('Motor Wires Harness')
            Tab('	')
            ReferenceField('20')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('20')
        TableOfContentsEntry('7	REFERENCES	21')
             > (0,0,0,1,2) toc level 1 [Sphinx] > table of contents
            ReferenceField('7')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
            Tab('	')
            ReferenceField('REFERENCES')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('REFERENCES')
                MixedStyledText('REFERENCES')
                  SingleStyledText('REFERENCES')
            Tab('	')
            ReferenceField('21')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('21')
        TableOfContentsEntry('7.1	GitHub	21')
             > (0,0,0,1,2) toc level 2 [Sphinx] > table of contents
            ReferenceField('7.1')
                 > (0,0,0,1,4) toc entry number reference field [Sphinx] > linked reference
                   (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7.1')
            Tab('	')
            ReferenceField('GitHub')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('GitHub')
                MixedStyledText('GitHub')
                  SingleStyledText('GitHub')
            Tab('	')
            ReferenceField('21')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('21')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		i')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		i')
          MixedStyledText('		i')
            Tab('	')
            Tab('	')
            Field('i')
              SingleStyledText('i')
---------------------------------- page ii ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('ii')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        Field('ii')
          SingleStyledText('ii')
---------------------------------- page iii ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('List of Figures', style='front matter section title')
       > (0,0,1,0,2) front matter section title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('List of Figures')
        StringField('List of Figures')
          SingleStyledText('List of Figures')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    ListOfFiguresSection(style='list of chapter')
         > (0,0,0,1,1) chapter [Sphinx] > DEFAULT
           (0,0,0,0,2) list of figures section [Sphinx] > table of contents section
      ListOfFigures()   List of figures
           > (0,0,0,0,2) list of figures [Sphinx] > table of contents
        ListOfEntry('Figure 2.1: DC Motor PWM duty cy...')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 2.1')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 2.1')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('2.1')
            SingleStyledText(': ')
            ReferenceField('DC Motor PWM duty cycle 0%')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('DC Motor PWM duty cycle 0%')
                MixedStyledText('DC Motor PWM duty cycle 0%')
                  SingleStyledText('DC Motor PWM duty cycle 0%')
            Tab('	')
            ReferenceField('6')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('6')
        ListOfEntry('Figure 2.2: DC Motor PWM duty cy...')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 2.2')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 2.2')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('2.2')
            SingleStyledText(': ')
            ReferenceField('DC Motor PWM duty cycle 47.6%')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('DC Motor PWM duty cycle 47.6%')
                MixedStyledText('DC Motor PWM duty cycle 47.6%')
                  SingleStyledText('DC Motor PWM duty cycle 47.6%')
            Tab('	')
            ReferenceField('7')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
        ListOfEntry('Figure 2.3: DC Motor PWM duty cy...')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 2.3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 2.3')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('2.3')
            SingleStyledText(': ')
            ReferenceField('DC Motor PWM duty cycle 90.8%')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('DC Motor PWM duty cycle 90.8%')
                MixedStyledText('DC Motor PWM duty cycle 90.8%')
                  SingleStyledText('DC Motor PWM duty cycle 90.8%')
            Tab('	')
            ReferenceField('7')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('7')
        ListOfEntry('Figure 6.1: Completed chassis wi...')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 6.1')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 6.1')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('6.1')
            SingleStyledText(': ')
            ReferenceField('Completed chassis with only DC m...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Completed chassis with only DC m...')
                MixedStyledText('Completed chassis with only DC m...')
                  SingleStyledText('Completed chassis with only DC m...')
            Tab('	')
            ReferenceField('18')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('18')
        ListOfEntry('Figure 6.2: Completed wiring.	19')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 6.2')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 6.2')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('6.2')
            SingleStyledText(': ')
            ReferenceField('Completed wiring.')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Completed wiring.')
                MixedStyledText('Completed wiring.')
                  SingleStyledText('Completed wiring.')
            Tab('	')
            ReferenceField('19')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('19')
        ListOfEntry('Figure 6.3: DC Motors wires secu...')
             > (0,0,0,0,4) list of figures entry [Sphinx] > list of figures
            ReferenceField('Figure 6.3')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('Figure 6.3')
                StringField('Figure')
                  SingleStyledText('Figure')
                SingleStyledText(' ')
                SingleStyledText('6.3')
            SingleStyledText(': ')
            ReferenceField('DC Motors wires secured inside h...')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              MixedStyledText('DC Motors wires secured inside h...')
                MixedStyledText('DC Motors wires secured inside h...')
                  SingleStyledText('DC Motors wires secured inside h...')
            Tab('	')
            ReferenceField('20')
                 > (0,0,0,0,1) linked reference [Sphinx] > DEFAULT
              SingleStyledText('20')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		iii')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		iii')
          MixedStyledText('		iii')
            Tab('	')
            Tab('	')
            Field('iii')
              SingleStyledText('iii')
---------------------------------- page 1 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    DocumentTree()   index.rst   <document>
      Image('_static/ESP-IDF_Robot.jpg')   index.rst:9   <image>
           > (0,0,0,0,2) image [Sphinx] > DEFAULT
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		1')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		1')
          MixedStyledText('		1')
            Tab('	')
            Tab('	')
            Field('1')
              SingleStyledText('1')
---------------------------------- page 2 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2		Chapter ​.  ​')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2		Chapter ​.  ​')
          MixedStyledText('2		Chapter ​.  ​')
            Field('2')
              SingleStyledText('2')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('​')
              SingleStyledText('​')
            SingleStyledText('.  ')
            Field('​')
              SingleStyledText('​')
---------------------------------- page 3 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 1', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 1')
        MixedStyledText('Chapter 1')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('1', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('1')
  Paragraph('OVERVIEW', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('OVERVIEW')
        MixedStyledText('OVERVIEW')
          MixedStyledText('OVERVIEW')
            SingleStyledText('OVERVIEW')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%intro')   index.rst   <start_of_file>
          Section(id='%intro#overview')   intro.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('At the heart of this project is ...')   intro.rst:4   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
                MixedStyledText('At the heart of this project is ...')
                  MixedStyledText('At the heart of this project is ...')
                    SingleStyledText('At the heart of this project is ...')
            Paragraph('An ESP-NOW-based remote controll...')   intro.rst:11   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
                MixedStyledText('An ESP-NOW-based remote controll...')
                  MixedStyledText('An ESP-NOW-based remote controll...')
                    SingleStyledText('An ESP-NOW-based remote controll...')
            Section(id='%intro#abstract')   intro.rst:18   <section>
              Heading('1.1 ABSTRACT')   intro.rst:18   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('1.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('1.1')
                    SingleStyledText(' ')
                  MixedStyledText('ABSTRACT')
                    MixedStyledText('ABSTRACT')
                      SingleStyledText('ABSTRACT')
              Paragraph('To enable real-time remote opera...')   intro.rst:20   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('To enable real-time remote opera...')
                    MixedStyledText('To enable real-time remote opera...')
                      SingleStyledText('To enable real-time remote opera...')
                  MixedStyledText('To enable real-time remote opera...')
                    MixedStyledText('To enable real-time remote opera...')
                      SingleStyledText('To enable real-time remote opera...')
                  MixedStyledText('To enable real-time remote opera...')
                    MixedStyledText('To enable real-time remote opera...')
                      SingleStyledText('To enable real-time remote opera...')
                  MixedStyledText('To enable real-time remote opera...')
                    MixedStyledText('To enable real-time remote opera...')
                      SingleStyledText('To enable real-time remote opera...')
                  MixedStyledText('To enable real-time remote opera...')
                    MixedStyledText('To enable real-time remote opera...')
                      SingleStyledText('To enable real-time remote opera...')
              Paragraph('On the transmitter side, the joy...')   intro.rst:24   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('On the transmitter side, the joy...')
                    MixedStyledText('On the transmitter side, the joy...')
                      SingleStyledText('On the transmitter side, the joy...')
                  MixedStyledText('On the transmitter side, the joy...')
                    MixedStyledText('On the transmitter side, the joy...')
                      SingleStyledText('On the transmitter side, the joy...')
                  MixedStyledText('On the transmitter side, the joy...')
                    MixedStyledText('On the transmitter side, the joy...')
                      SingleStyledText('On the transmitter side, the joy...')
              Paragraph('The receiver module listens for ...')   intro.rst:27   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The receiver module listens for ...')
                    MixedStyledText('The receiver module listens for ...')
                      SingleStyledText('The receiver module listens for ...')
                  MixedStyledText('The receiver module listens for ...')
                    MixedStyledText('The receiver module listens for ...')
                      SingleStyledText('The receiver module listens for ...')
                  MixedStyledText('The receiver module listens for ...')
                    MixedStyledText('The receiver module listens for ...')
                      SingleStyledText('The receiver module listens for ...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		3')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		3')
          MixedStyledText('		3')
            Tab('	')
            Tab('	')
            Field('3')
              SingleStyledText('3')
---------------------------------- page 4 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('4		Chapter 1.  OVERVIEW')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('4		Chapter 1.  OVERVIEW')
          MixedStyledText('4		Chapter 1.  OVERVIEW')
            Field('4')
              SingleStyledText('4')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('1')
              SingleStyledText('1')
            SingleStyledText('.  ')
            Field('OVERVIEW')
              MixedStyledText('OVERVIEW')
                MixedStyledText('OVERVIEW')
                  SingleStyledText('OVERVIEW')
---------------------------------- page 5 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 2', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 2')
        MixedStyledText('Chapter 2')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('2', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('2')
  Paragraph('HOW DOES IT WORK?', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('HOW DOES IT WORK?')
        MixedStyledText('HOW DOES IT WORK?')
          MixedStyledText('HOW DOES IT WORK?')
            SingleStyledText('HOW DOES IT WORK?')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%overview')   index.rst   <start_of_file>
          Section(id='%overview#how-does-it-work')   overview.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('The BitByteRider RC car is power...')   overview.rst:4   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The BitByteRider RC car is power...')
                  MixedStyledText('The BitByteRider RC car is power...')
                    SingleStyledText('The BitByteRider RC car is power...')
                MixedStyledText('The BitByteRider RC car is power...')
                  MixedStyledText('The BitByteRider RC car is power...')
                    SingleStyledText('The BitByteRider RC car is power...')
                    MixedStyledText('GitHub', style='external link')   <reference>
                         > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                      SingleStyledText('GitHub')
                    SingleStyledText(': ')
                    MixedStyledText('https://github.com/alexandrebobk...', style='external link')   <reference>
                         > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                      SingleStyledText('https://github.com/alexandrebobk...')
                MixedStyledText('The BitByteRider RC car is power...')
                  MixedStyledText('The BitByteRider RC car is power...')
                    SingleStyledText('The BitByteRider RC car is power...')
                    MixedStyledText('GitHub', style='external link')   <reference>
                         > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                      SingleStyledText('GitHub')
                    SingleStyledText(': ')
                    MixedStyledText('https://github.com/alexandrebobk...', style='external link')   <reference>
                         > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                      SingleStyledText('https://github.com/alexandrebobk...')
            Section(id='%overview#reserved-pins-gpios')   overview.rst:10   <section>
              Heading('2.1 Reserved Pins & GPIOs')   overview.rst:10   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('2.1')
                    SingleStyledText(' ')
                  MixedStyledText('Reserved Pins & GPIOs')
                    MixedStyledText('Reserved Pins & GPIOs')
                      SingleStyledText('Reserved Pins & GPIOs')
              Paragraph('The following table summarizes G...')   overview.rst:12   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The following table summarizes G...')
                    MixedStyledText('The following table summarizes G...')
                      SingleStyledText('The following table summarizes G...')
              Paragraph('The GPIO numbers correspond to t...')   overview.rst:14   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The GPIO numbers correspond to t...')
                    MixedStyledText('The GPIO numbers correspond to t...')
                      SingleStyledText('The GPIO numbers correspond to t...')
                  MixedStyledText('The GPIO numbers correspond to t...')
                    MixedStyledText('The GPIO numbers correspond to t...')
                      SingleStyledText('The GPIO numbers correspond to t...')
              Section(id='%overview#reading-the-joystick-x-and-y-axis')   overview.rst:17   <section>
                Heading('2.1.1 Reading the Joystick x- an...')   overview.rst:17   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.1 ', style='label')
                         x (0,0,1,1,3) heading level 3 label
                      SingleStyledText('')
                      SingleStyledText('2.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('Reading the Joystick x- and y- a...')
                      MixedStyledText('Reading the Joystick x- and y- a...')
                        SingleStyledText('Reading the Joystick x- and y- a...')
                Paragraph('To determine the position of the...')   overview.rst:19   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To determine the position of the...')
                      MixedStyledText('To determine the position of the...')
                        SingleStyledText('To determine the position of the...')
                    MixedStyledText('To determine the position of the...')
                      MixedStyledText('To determine the position of the...')
                        SingleStyledText('To determine the position of the...')
                        MixedStyledText('GPIO0', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO0')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO1', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO1')
                        SingleStyledText(').')
              Section(id='%overview#controlling-the-direction-and-speed')   overview.rst:23   <section>
                Heading('2.1.2 Controlling the Direction ...')   overview.rst:23   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('2.1.2 ', style='label')
                         x (0,0,1,1,3) heading level 3 label
                      SingleStyledText('')
                      SingleStyledText('2.1.2')
                      SingleStyledText(' ')
                    MixedStyledText('Controlling the Direction and Sp...')
                      MixedStyledText('Controlling the Direction and Sp...')
                        SingleStyledText('Controlling the Direction and Sp...')
                Paragraph('To set any desired speed of Bite...')   overview.rst:25   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('To set any desired speed of Bite...')
                      MixedStyledText('To set any desired speed of Bite...')
                        SingleStyledText('To set any desired speed of Bite...')
                        MixedStyledText('ESP32-C3 Breadboard Adapter DevB...', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard Adapter DevB...')
                        SingleStyledText(' uses PWM to control the rotatio...')
                    MixedStyledText('To set any desired speed of Bite...')
                      MixedStyledText('To set any desired speed of Bite...')
                        SingleStyledText('To set any desired speed of Bite...')
                        MixedStyledText('ESP32-C3 Breadboard Adapter DevB...', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard Adapter DevB...')
                        SingleStyledText(' uses PWM to control the rotatio...')
                    MixedStyledText('To set any desired speed of Bite...')
                      MixedStyledText('To set any desired speed of Bite...')
                        SingleStyledText('To set any desired speed of Bite...')
                        MixedStyledText('ESP32-C3 Breadboard Adapter DevB...', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard Adapter DevB...')
                        SingleStyledText(' uses PWM to control the rotatio...')
                Paragraph('Due to the design and limited nu...')   overview.rst:28   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Due to the design and limited nu...')
                      MixedStyledText('Due to the design and limited nu...')
                        SingleStyledText('Due to the design and limited nu...')
                        MixedStyledText('ESP32-C3 Breadboard DevBoard', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard DevBoard')
                        SingleStyledText(' can control rotation speed and ...')
                    MixedStyledText('Due to the design and limited nu...')
                      MixedStyledText('Due to the design and limited nu...')
                        SingleStyledText('Due to the design and limited nu...')
                        MixedStyledText('ESP32-C3 Breadboard DevBoard', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard DevBoard')
                        SingleStyledText(' can control rotation speed and ...')
                    MixedStyledText('Due to the design and limited nu...')
                      MixedStyledText('Due to the design and limited nu...')
                        SingleStyledText('Due to the design and limited nu...')
                        MixedStyledText('ESP32-C3 Breadboard DevBoard', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('ESP32-C3 Breadboard DevBoard')
                        SingleStyledText(' can control rotation speed and ...')
                Paragraph('Based on this constraint, the RC...')   overview.rst:32   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('Based on this constraint, the RC...')
                      MixedStyledText('Based on this constraint, the RC...')
                        SingleStyledText('Based on this constraint, the RC...')
                    MixedStyledText('Based on this constraint, the RC...')
                      MixedStyledText('Based on this constraint, the RC...')
                        SingleStyledText('Based on this constraint, the RC...')
                Table()   overview.rst   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableBody()
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM of DC Motors')   overview.rst:36   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM of DC Motors')
                              MixedStyledText('PWM of DC Motors')
                                SingleStyledText('PWM of DC Motors')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Direction')   overview.rst:36   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Direction')
                              MixedStyledText('Direction')
                                SingleStyledText('Direction')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM(left) = PWM(right)')   overview.rst:38   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM(left) = PWM(right)')
                              MixedStyledText('PWM(left) = PWM(right)')
                                SingleStyledText('PWM(left) = PWM(right)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Straight')   overview.rst:38   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Straight')
                              MixedStyledText('Straight')
                                SingleStyledText('Straight')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM(left) > PWM(right)')   overview.rst:40   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM(left) > PWM(right)')
                              MixedStyledText('PWM(left) > PWM(right)')
                                SingleStyledText('PWM(left) > PWM(right)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left')   overview.rst:40   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left')
                              MixedStyledText('Left')
                                SingleStyledText('Left')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM(left) < PWM(right)')   overview.rst:42   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM(left) < PWM(right)')
                              MixedStyledText('PWM(left) < PWM(right)')
                                SingleStyledText('PWM(left) < PWM(right)')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Right')   overview.rst:42   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Right')
                              MixedStyledText('Right')
                                SingleStyledText('Right')
                Admonition()   overview.rst:45   <admonition>
                     > (0,0,0,0,2) admonition [Sphinx] > DEFAULT
                  Paragraph('What is PWM?', style='title')
                       > (0,0,1,0,4) admonition title [Sphinx] > body
                         (0,0,1,0,2) title [Sphinx] > default
                         (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('What is PWM?')
                        MixedStyledText('What is PWM?')   overview.rst:45   <title>
                          SingleStyledText('What is PWM?')
                  Paragraph('PWM stands for Pulse Width Modul...')   overview.rst:47   <paragraph>
                       > (0,0,0,0,2) body [Sphinx] > default
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
                      MixedStyledText('PWM stands for Pulse Width Modul...')
                        MixedStyledText('PWM stands for Pulse Width Modul...')
                          MixedStyledText('PWM', style='strong')   <strong>
                               > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                            SingleStyledText('PWM')
                          SingleStyledText(' stands for Pulse Width Modulati...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		5')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		5')
          MixedStyledText('		5')
            Tab('	')
            Tab('	')
            Field('5')
              SingleStyledText('5')
---------------------------------- page 6 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%overview')   index.rst   <start_of_file>
          (continued) Section(id='%overview#how-does-it-work')   overview.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%overview#reserved-pins-gpios')   overview.rst:10   <section>
              (continued) Section(id='%overview#controlling-the-direction-and-speed')   overview.rst:23   <section>
                Paragraph('A pair of PWM channels are used ...')   overview.rst:53   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('A pair of PWM channels are used ...')
                      MixedStyledText('A pair of PWM channels are used ...')
                        SingleStyledText('A pair of PWM channels are used ...')
                    MixedStyledText('A pair of PWM channels are used ...')
                      MixedStyledText('A pair of PWM channels are used ...')
                        SingleStyledText('A pair of PWM channels are used ...')
                        MixedStyledText('GPIO6', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO6')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO5', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO5')
                        SingleStyledText(' provide PWM to the left- and ri...')
                    MixedStyledText('A pair of PWM channels are used ...')
                      MixedStyledText('A pair of PWM channels are used ...')
                        SingleStyledText('A pair of PWM channels are used ...')
                        MixedStyledText('GPIO6', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO6')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO5', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO5')
                        SingleStyledText(' provide PWM to the left- and ri...')
                        MixedStyledText('clockwise', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('clockwise')
                        SingleStyledText(' direction. Similarly, ')
                        MixedStyledText('GPIO4', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO4')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO7', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO7')
                        SingleStyledText(' provide PWM to the left- and ri...')
                    MixedStyledText('A pair of PWM channels are used ...')
                      MixedStyledText('A pair of PWM channels are used ...')
                        SingleStyledText('A pair of PWM channels are used ...')
                        MixedStyledText('GPIO6', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO6')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO5', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO5')
                        SingleStyledText(' provide PWM to the left- and ri...')
                        MixedStyledText('clockwise', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('clockwise')
                        SingleStyledText(' direction. Similarly, ')
                        MixedStyledText('GPIO4', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO4')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO7', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO7')
                        SingleStyledText(' provide PWM to the left- and ri...')
                        MixedStyledText('counter-clockwise', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('counter-clockwise')
                        SingleStyledText(' direction. Changing PWM on each...')
                    MixedStyledText('A pair of PWM channels are used ...')
                      MixedStyledText('A pair of PWM channels are used ...')
                        SingleStyledText('A pair of PWM channels are used ...')
                        MixedStyledText('GPIO6', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO6')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO5', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO5')
                        SingleStyledText(' provide PWM to the left- and ri...')
                        MixedStyledText('clockwise', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('clockwise')
                        SingleStyledText(' direction. Similarly, ')
                        MixedStyledText('GPIO4', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO4')
                        SingleStyledText(' and ')
                        MixedStyledText('GPIO7', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('GPIO7')
                        SingleStyledText(' provide PWM to the left- and ri...')
                        MixedStyledText('counter-clockwise', style='strong')   <strong>
                             > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                          SingleStyledText('counter-clockwise')
                        SingleStyledText(' direction. Changing PWM on each...')
                Paragraph('The table below summarizes the G...')   overview.rst:58   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The table below summarizes the G...')
                      MixedStyledText('The table below summarizes the G...')
                        SingleStyledText('The table below summarizes the G...')
                    MixedStyledText('The table below summarizes the G...')
                      MixedStyledText('The table below summarizes the G...')
                        SingleStyledText('The table below summarizes the G...')
                DefinitionList(style='field list')   overview.rst:60   <field_list>
                     > (0,0,1,0,2) field list [Sphinx] > DEFAULT
                       (0,0,0,0,2) definition list [Sphinx] > DEFAULT
                  LabeledFlowable()   overview.rst:60   <field>
                       > (0,0,1,0,4) field list item [Sphinx] > DEFAULT
                         (0,0,0,0,4) definition list item [Sphinx] > DEFAULT
                    Paragraph('class', style='field name')
                         > (0,0,2,0,6) field name [Sphinx] > default
                           (0,0,0,0,2) body [Sphinx] > default
                        MixedStyledText('class')
                          MixedStyledText('class')   overview.rst   <field_name>
                            SingleStyledText('class')
                    StaticGroupedFlowables()   <field_body>
                      Paragraph('break')   overview.rst:60   <paragraph>
                           > (0,0,0,0,2) body [Sphinx] > default
                          MixedStyledText('break')
                            MixedStyledText('break')
                              SingleStyledText('break')
                Table()   overview.rst   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table head left border
                             x (0,0,0,2,4) table left border
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIOs')   overview.rst:63   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIOs')
                              MixedStyledText('GPIOs')
                                SingleStyledText('GPIOs')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('State')   overview.rst:63   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('State')
                              MixedStyledText('State')
                                SingleStyledText('State')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Description')   overview.rst:63   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Description')
                              MixedStyledText('Description')
                                SingleStyledText('Description')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table head right border
                             x (0,0,0,2,4) table right border
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Function')   overview.rst:63   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Function')
                              MixedStyledText('Function')
                                SingleStyledText('Function')
                  TableBody()
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO6, GPIO4')   overview.rst:65   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO6, GPIO4')
                              MixedStyledText('GPIO6, GPIO4')
                                SingleStyledText('GPIO6, GPIO4')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM')   overview.rst:65   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM')
                              MixedStyledText('PWM')
                                SingleStyledText('PWM')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left & Right DC Motors spin cloc...')   overview.rst:65   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left & Right DC Motors spin cloc...')
                              MixedStyledText('Left & Right DC Motors spin cloc...')
                                SingleStyledText('Left & Right DC Motors spin cloc...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Forward')   overview.rst:65   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Forward')
                              MixedStyledText('Forward')
                                SingleStyledText('Forward')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO5, GPIO7')   overview.rst:68   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO5, GPIO7')
                              MixedStyledText('GPIO5, GPIO7')
                                SingleStyledText('GPIO5, GPIO7')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM')   overview.rst:68   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM')
                              MixedStyledText('PWM')
                                SingleStyledText('PWM')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left & Right DC Motors spin coun...')   overview.rst:68   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left & Right DC Motors spin coun...')
                              MixedStyledText('Left & Right DC Motors spin coun...')
                                SingleStyledText('Left & Right DC Motors spin coun...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Reverse')   overview.rst:68   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Reverse')
                              MixedStyledText('Reverse')
                                SingleStyledText('Reverse')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO6, GPIO7')   overview.rst:71   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO6, GPIO7')
                              MixedStyledText('GPIO6, GPIO7')
                                SingleStyledText('GPIO6, GPIO7')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM')   overview.rst:71   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM')
                              MixedStyledText('PWM')
                                SingleStyledText('PWM')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left DC Motors spin clockwise. R...')   overview.rst:71   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left DC Motors spin clockwise. R...')
                              MixedStyledText('Left DC Motors spin clockwise. R...')
                                SingleStyledText('Left DC Motors spin clockwise. R...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left')   overview.rst:71   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left')
                              MixedStyledText('Left')
                                SingleStyledText('Left')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO4, GPIO5')   overview.rst:74   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO4, GPIO5')
                              MixedStyledText('GPIO4, GPIO5')
                                SingleStyledText('GPIO4, GPIO5')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM')   overview.rst:74   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM')
                              MixedStyledText('PWM')
                                SingleStyledText('PWM')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Left DC Motors spin counterclock...')   overview.rst:74   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Left DC Motors spin counterclock...')
                              MixedStyledText('Left DC Motors spin counterclock...')
                                SingleStyledText('Left DC Motors spin counterclock...')
                            MixedStyledText('Left DC Motors spin counterclock...')
                              MixedStyledText('Left DC Motors spin counterclock...')
                                SingleStyledText('Left DC Motors spin counterclock...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Right')   overview.rst:74   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Right')
                              MixedStyledText('Right')
                                SingleStyledText('Right')
                Paragraph('The following images illustrate ...')   overview.rst:78   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('The following images illustrate ...')
                      MixedStyledText('The following images illustrate ...')
                        SingleStyledText('The following images illustrate ...')
                    MixedStyledText('The following images illustrate ...')
                      MixedStyledText('The following images illustrate ...')
                        SingleStyledText('The following images illustrate ...')
                Figure(id='%overview#id1')   overview.rst:80   <figure>
                     > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                  Image('_static/ESP-IDF_Robot_PWM_Duty-0.bmp')   overview.rst:80   <image>
                       > (0,0,0,0,4) figure image [Sphinx] > image
                         (0,0,0,0,2) image [Sphinx] > DEFAULT
                  Caption('Figure 2.1. DC Motor PWM duty cy...')   overview.rst:82   <caption>
                       > (0,0,0,0,4) figure caption [Sphinx] > caption
                      StringField('Figure')
                        SingleStyledText('Figure')
                      SingleStyledText(' ')
                      MixedStyledText('2.1. ', style='label')
                        SingleStyledText('')
                        SingleStyledText('2.1')
                        SingleStyledText('. ')
                      MixedStyledText('DC Motor PWM duty cycle 0%')
                        MixedStyledText('DC Motor PWM duty cycle 0%')
                          SingleStyledText('DC Motor PWM duty cycle 0%')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6		Chapter 2.  HOW DOES IT WORK?')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6		Chapter 2.  HOW DOES IT WORK?')
          MixedStyledText('6		Chapter 2.  HOW DOES IT WORK?')
            Field('6')
              SingleStyledText('6')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('HOW DOES IT WORK?')
              MixedStyledText('HOW DOES IT WORK?')
                MixedStyledText('HOW DOES IT WORK?')
                  SingleStyledText('HOW DOES IT WORK?')
---------------------------------- page 7 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%overview')   index.rst   <start_of_file>
          (continued) Section(id='%overview#how-does-it-work')   overview.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%overview#reserved-pins-gpios')   overview.rst:10   <section>
              (continued) Section(id='%overview#controlling-the-direction-and-speed')   overview.rst:23   <section>
                Figure(id='%overview#id2')   overview.rst:84   <figure>
                     > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                  Image('_static/ESP-IDF_Robot_PWM_Duty-50.bmp')   overview.rst:84   <image>
                       > (0,0,0,0,4) figure image [Sphinx] > image
                         (0,0,0,0,2) image [Sphinx] > DEFAULT
                  Caption('Figure 2.2. DC Motor PWM duty cy...')   overview.rst:86   <caption>
                       > (0,0,0,0,4) figure caption [Sphinx] > caption
                      StringField('Figure')
                        SingleStyledText('Figure')
                      SingleStyledText(' ')
                      MixedStyledText('2.2. ', style='label')
                        SingleStyledText('')
                        SingleStyledText('2.2')
                        SingleStyledText('. ')
                      MixedStyledText('DC Motor PWM duty cycle 47.6%')
                        MixedStyledText('DC Motor PWM duty cycle 47.6%')
                          SingleStyledText('DC Motor PWM duty cycle 47.6%')
                Figure(id='%overview#id3')   overview.rst:88   <figure>
                     > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                  Image('_static/ESP-IDF_Robot_PWM_Duty-95.bmp')   overview.rst:88   <image>
                       > (0,0,0,0,4) figure image [Sphinx] > image
                         (0,0,0,0,2) image [Sphinx] > DEFAULT
                  Caption('Figure 2.3. DC Motor PWM duty cy...')   overview.rst:90   <caption>
                       > (0,0,0,0,4) figure caption [Sphinx] > caption
                      StringField('Figure')
                        SingleStyledText('Figure')
                      SingleStyledText(' ')
                      MixedStyledText('2.3. ', style='label')
                        SingleStyledText('')
                        SingleStyledText('2.3')
                        SingleStyledText('. ')
                      MixedStyledText('DC Motor PWM duty cycle 90.8%')
                        MixedStyledText('DC Motor PWM duty cycle 90.8%')
                          SingleStyledText('DC Motor PWM duty cycle 90.8%')
                Table()   overview.rst   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                  TableHead()
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table head left border
                             x (0,0,0,2,4) table left border
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('GPIO')   overview.rst:97   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('GPIO')
                              MixedStyledText('GPIO')
                                SingleStyledText('GPIO')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Pin')   overview.rst:97   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Pin')
                              MixedStyledText('Pin')
                                SingleStyledText('Pin')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Function')   overview.rst:97   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Function')
                              MixedStyledText('Function')
                                SingleStyledText('Function')
                        TableCellBackground()
                             x (0,0,0,0,10) table head cell background
                        TableCellBorder('top')
                             > (0,0,0,2,8) table top border [Sphinx] > DEFAULT
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table head right border
                             x (0,0,0,2,4) table right border
                             x (0,0,0,1,8) table head cell right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table head bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,1,8) table head cell left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           x (0,0,0,0,8) table head cell
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Notes')   overview.rst:97   <paragraph>
                             > (0,0,0,0,10) table head cell paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Notes')
                              MixedStyledText('Notes')
                                SingleStyledText('Notes')
                  TableBody()
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('0')   overview.rst:99   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('0')
                              MixedStyledText('0')
                                SingleStyledText('0')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('16')   overview.rst:99   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('16')
                              MixedStyledText('16')
                                SingleStyledText('16')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Joystick x-axis')   overview.rst:99   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Joystick x-axis')
                              MixedStyledText('Joystick x-axis')
                                SingleStyledText('Joystick x-axis')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,2,8) table body top border [Sphinx] > table head bottom border
                               (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('ADC1_CH0')   overview.rst:99   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('ADC1_CH0')
                              MixedStyledText('ADC1_CH0')
                                SingleStyledText('ADC1_CH0')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('1')   overview.rst:101   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('1')
                              MixedStyledText('1')
                                SingleStyledText('1')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('15')   overview.rst:101   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('15')
                              MixedStyledText('15')
                                SingleStyledText('15')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Joystick y-axis')   overview.rst:101   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Joystick y-axis')
                              MixedStyledText('Joystick y-axis')
                                SingleStyledText('Joystick y-axis')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('ADC1_CH1')   overview.rst:101   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('ADC1_CH1')
                              MixedStyledText('ADC1_CH1')
                                SingleStyledText('ADC1_CH1')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		Byte Rider, Release 06-2025')
          MixedStyledText('		Byte Rider, Release 06-2025')
            Tab('	')
            Tab('	')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2.1.  Reserved Pins & GPIOs		7')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2.1.  Reserved Pins & GPIOs		7')
          MixedStyledText('2.1.  Reserved Pins & GPIOs		7')
            Field('2.1')
              SingleStyledText('2.1')
            SingleStyledText('.  ')
            Field('Reserved Pins & GPIOs')
              MixedStyledText('Reserved Pins & GPIOs')
                MixedStyledText('Reserved Pins & GPIOs')
                  SingleStyledText('Reserved Pins & GPIOs')
            Tab('	')
            Tab('	')
            Field('7')
              SingleStyledText('7')
---------------------------------- page 8 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%overview')   index.rst   <start_of_file>
          (continued) Section(id='%overview#how-does-it-work')   overview.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%overview#reserved-pins-gpios')   overview.rst:10   <section>
              (continued) Section(id='%overview#controlling-the-direction-and-speed')   overview.rst:23   <section>
                (continued) Table()   overview.rst   <table>
                     > (0,0,0,0,2) table [Sphinx] > DEFAULT
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('8')   overview.rst:103   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('8')
                              MixedStyledText('8')
                                SingleStyledText('8')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('5')   overview.rst:103   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('5')
                              MixedStyledText('5')
                                SingleStyledText('5')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('Joystick push button')   overview.rst:103   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Joystick push button')
                              MixedStyledText('Joystick push button')
                                SingleStyledText('Joystick push button')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('6')   overview.rst:105   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('6')
                              MixedStyledText('6')
                                SingleStyledText('6')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('4')   overview.rst:105   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('4')
                              MixedStyledText('4')
                                SingleStyledText('4')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM for clockwise rotation of le...')   overview.rst:105   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM for clockwise rotation of le...')
                              MixedStyledText('PWM for clockwise rotation of le...')
                                SingleStyledText('PWM for clockwise rotation of le...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('LEDC_CHANNEL_1')   overview.rst:105   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('LEDC_CHANNEL_1')
                              MixedStyledText('LEDC_CHANNEL_1')
                                SingleStyledText('LEDC_CHANNEL_1')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('5')   overview.rst:107   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('5')
                              MixedStyledText('5')
                                SingleStyledText('5')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('3')   overview.rst:107   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('3')
                              MixedStyledText('3')
                                SingleStyledText('3')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM for clockwise rotation of ri...')   overview.rst:107   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM for clockwise rotation of ri...')
                              MixedStyledText('PWM for clockwise rotation of ri...')
                                SingleStyledText('PWM for clockwise rotation of ri...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('LEDC_CHANNEL_0')   overview.rst:107   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('LEDC_CHANNEL_0')
                              MixedStyledText('LEDC_CHANNEL_0')
                                SingleStyledText('LEDC_CHANNEL_0')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('4')   overview.rst:109   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('4')
                              MixedStyledText('4')
                                SingleStyledText('4')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('2')   overview.rst:109   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('2')
                              MixedStyledText('2')
                                SingleStyledText('2')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM for counter-clockwise rotati...')   overview.rst:109   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM for counter-clockwise rotati...')
                              MixedStyledText('PWM for counter-clockwise rotati...')
                                SingleStyledText('PWM for counter-clockwise rotati...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on even row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('LEDC_CHANNEL_2')   overview.rst:109   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('LEDC_CHANNEL_2')
                              MixedStyledText('LEDC_CHANNEL_2')
                                SingleStyledText('LEDC_CHANNEL_2')
                    TableRow()
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             x (0,0,0,2,8) table body left border
                             x (0,0,0,2,4) table left border
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('7')   overview.rst:111   <paragraph>
                             > (0,0,0,1,8) table first column paragraph [Sphinx] > table body cell paragraph
                               (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('7')
                              MixedStyledText('7')
                                SingleStyledText('7')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('6')   overview.rst:111   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('6')
                              MixedStyledText('6')
                                SingleStyledText('6')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('PWM for counter-clockwise rotati...')   overview.rst:111   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('PWM for counter-clockwise rotati...')
                              MixedStyledText('PWM for counter-clockwise rotati...')
                                SingleStyledText('PWM for counter-clockwise rotati...')
                        TableCellBackground()
                             x (0,0,0,2,8) table body cell background on odd row
                        TableCellBorder('top')
                             > (0,0,0,1,2) table cell top border [Sphinx] > table cell border
                        TableCellBorder('right')
                             x (0,0,0,2,8) table body right border
                             x (0,0,0,2,4) table right border
                             > (0,0,0,1,2) table cell right border [Sphinx] > table cell border
                        TableCellBorder('bottom')
                             > (0,0,0,2,8) table bottom border [Sphinx] > table top border
                               (0,0,0,1,2) table cell bottom border [Sphinx] > table cell border
                        TableCellBorder('left')
                             > (0,0,0,1,2) table cell left border [Sphinx] > table cell border
                      TableCell()   <entry>
                           > (0,0,0,0,7) table cell [Sphinx] > DEFAULT
                        Paragraph('LEDC_CHANNEL_3')   overview.rst:111   <paragraph>
                             > (0,0,0,0,9) table body cell paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('LEDC_CHANNEL_3')
                              MixedStyledText('LEDC_CHANNEL_3')
                                SingleStyledText('LEDC_CHANNEL_3')
            Section(id='%overview#fusion-of-software-with-hardware')   overview.rst:115   <section>
              Heading('2.2 Fusion of Software with Hard...')   overview.rst:115   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.2 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('2.2')
                    SingleStyledText(' ')
                  MixedStyledText('Fusion of Software with Hardware')
                    MixedStyledText('Fusion of Software with Hardware')
                      SingleStyledText('Fusion of Software with Hardware')
              Paragraph('The struct for storing motors PW...')   overview.rst:117   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The struct for storing motors PW...')
                    MixedStyledText('The struct for storing motors PW...')
                      SingleStyledText('The ')
                      MixedStyledText('struct', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('struct')
                      SingleStyledText(' for storing motors PWM values.')
              CodeBlock('struct motors_rpm {\n    int moto...')   overview.rst:119   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('struct motors_rpm {\n    int moto...')
                    MixedStyledText('struct motors_rpm {\n    int moto...')
                      Token('struct', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motors_rpm', type=Token.Name.Class)
                           > (0,0,0,1,2) (pygments)Token.Name.Class [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('};', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The function for updating motors...')   overview.rst:128   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The function for updating motors...')
                    MixedStyledText('The function for updating motors...')
                      SingleStyledText('The function for updating motors...')
              CodeBlock('// Function to send data to the ...')   overview.rst:130   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('// Function to send data to the ...')
                    MixedStyledText('// Function to send data to the ...')
                      Token('// Function to send data to the ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('              ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Declare data struct\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('crc', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Display brief summary of data...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Joystick (x,y) position ( 0x%04...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('// Function to send data to the ...')
                    MixedStyledText('// Function to send data to the ...')
                      Token('// Function to send data to the ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('              ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Declare data struct\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('crc', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Display brief summary of data...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Joystick (x,y) position ( 0x%04...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 1, pwm 2 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('// Function to send data to the ...')
                    MixedStyledText('// Function to send data to the ...')
                      Token('// Function to send data to the ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('              ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Declare data struct\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('crc', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Display brief summary of data...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Joystick (x,y) position ( 0x%04...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 1, pwm 2 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 3, pwm 4 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('// Function to send data to the ...')
                    MixedStyledText('// Function to send data to the ...')
                      Token('// Function to send data to the ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('              ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Declare data struct\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('crc', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Display brief summary of data...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Joystick (x,y) position ( 0x%04...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 1, pwm 2 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 3, pwm 4 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call ESP-NOW function to send...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('// Function to send data to the ...')
                    MixedStyledText('// Function to send data to the ...')
                      Token('// Function to send data to the ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('              ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Declare data struct\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('crc', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Display brief summary of data...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Joystick (x,y) position ( 0x%04...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 1, pwm 2 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"pwm 3, pwm 4 [ 0x%04X, 0x%04X ]...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call ESP-NOW function to send...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('result', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_send', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('receiver_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('&', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sizeof', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// If status is NOT OK, display ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('if', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('result', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('!=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGE', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('"ESP-NOW"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Error sending data! Error code:...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('result', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('deletePeer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('else', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGW', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('"ESP-NOW"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Data was sent."', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The onDataReceived() and onDataS...')   overview.rst:162   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The onDataReceived() and onDataS...')
                    MixedStyledText('The onDataReceived() and onDataS...')
                      SingleStyledText('The onDataReceived() and onDataS...')
              CodeBlock('// Call-back for the event when ...')   overview.rst:164   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('// Call-back for the event when ...')
                    MixedStyledText('// Call-back for the event when ...')
                      Token('// Call-back for the event when ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('                            ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Allocate memory for buffer to...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('// Call-back for the event when ...')
                    MixedStyledText('// Call-back for the event when ...')
                      Token('// Call-back for the event when ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('                            ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Allocate memory for buffer to...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('8		Chapter 2.  HOW DOES IT WORK?')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('8		Chapter 2.  HOW DOES IT WORK?')
          MixedStyledText('8		Chapter 2.  HOW DOES IT WORK?')
            Field('8')
              SingleStyledText('8')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('HOW DOES IT WORK?')
              MixedStyledText('HOW DOES IT WORK?')
                MixedStyledText('HOW DOES IT WORK?')
                  SingleStyledText('HOW DOES IT WORK?')
---------------------------------- page 9 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%overview')   index.rst   <start_of_file>
          (continued) Section(id='%overview#how-does-it-work')   overview.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%overview#fusion-of-software-with-hardware')   overview.rst:115   <section>
              (continued) CodeBlock('// Call-back for the event when ...')   overview.rst:164   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('// Call-back for the event when ...')
                    MixedStyledText('// Call-back for the event when ...')
                      Token('// Call-back for the event when ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('                            ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Allocate memory for buffer to...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGW', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Data was received"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"x-axis: 0x%04x"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('->', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"x-axis: 0x%04x"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('->', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"PWM 1: 0x%04x"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('->', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call-back for the event when ...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataSent', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_send_status_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('status', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGW', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Packet send status: 0x%04X"', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('status', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
              Paragraph('The rc_send_data_task() function...')   overview.rst:181   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('The rc_send_data_task() function...')
                    MixedStyledText('The rc_send_data_task() function...')
                      SingleStyledText('The rc_send_data_task() function...')
              CodeBlock('// Continous, periodic task that...')   overview.rst:183   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('// Continous, periodic task that...')
                    MixedStyledText('// Continous, periodic task that...')
                      Token('// Continous, periodic task that...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('static', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('rc_send_data_task', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('arg', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('while', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('true', type=Token.Name.Builtin)
                           > (0,0,0,1,2) (pygments)Token.Name.Builtin [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('if', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_is_peer_exist', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('receiver_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('))', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n            ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('vTaskDelay', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('100', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('/', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('portTICK_PERIOD_MS', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%overview#schematic')   overview.rst:196   <section>
              Heading('2.3 Schematic')   overview.rst:196   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('2.3 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('2.3')
                    SingleStyledText(' ')
                  MixedStyledText('Schematic')
                    MixedStyledText('Schematic')
                      SingleStyledText('Schematic')
              Image('_static/ESP-IDF_Robot_schematic.png')   overview.rst:198   <image>
                   > (0,0,0,0,2) image [Sphinx] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		Byte Rider, Release 06-2025')
          MixedStyledText('		Byte Rider, Release 06-2025')
            Tab('	')
            Tab('	')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('2.3.  Schematic		9')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('2.3.  Schematic		9')
          MixedStyledText('2.3.  Schematic		9')
            Field('2.3')
              SingleStyledText('2.3')
            SingleStyledText('.  ')
            Field('Schematic')
              MixedStyledText('Schematic')
                MixedStyledText('Schematic')
                  SingleStyledText('Schematic')
            Tab('	')
            Tab('	')
            Field('9')
              SingleStyledText('9')
---------------------------------- page 10 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('10		Chapter 2.  HOW DOES IT WORK...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('10		Chapter 2.  HOW DOES IT WORK...')
          MixedStyledText('10		Chapter 2.  HOW DOES IT WORK...')
            Field('10')
              SingleStyledText('10')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('2')
              SingleStyledText('2')
            SingleStyledText('.  ')
            Field('HOW DOES IT WORK?')
              MixedStyledText('HOW DOES IT WORK?')
                MixedStyledText('HOW DOES IT WORK?')
                  SingleStyledText('HOW DOES IT WORK?')
---------------------------------- page 11 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 3', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 3')
        MixedStyledText('Chapter 3')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('3', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('3')
  Paragraph('DATA STRUCTS', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('DATA STRUCTS')
        MixedStyledText('DATA STRUCTS')
          MixedStyledText('DATA STRUCTS')
            SingleStyledText('DATA STRUCTS')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%data')   index.rst   <start_of_file>
          Section(id='%data#data-structs')   data.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Paragraph('The struct serves as the data pa...')   data.rst:4   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('The struct serves as the data pa...')
                  MixedStyledText('The struct serves as the data pa...')
                    SingleStyledText('The struct serves as the data pa...')
                MixedStyledText('The struct serves as the data pa...')
                  MixedStyledText('The struct serves as the data pa...')
                    SingleStyledText('The struct serves as the data pa...')
                MixedStyledText('The struct serves as the data pa...')
                  MixedStyledText('The struct serves as the data pa...')
                    SingleStyledText('The struct serves as the data pa...')
                    MixedStyledText('sensors_data_t', style='emphasis')   <emphasis>
                         > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                      SingleStyledText('sensors_data_t')
                    SingleStyledText(' struct encapsulates all control...')
                MixedStyledText('The struct serves as the data pa...')
                  MixedStyledText('The struct serves as the data pa...')
                    SingleStyledText('The struct serves as the data pa...')
                    MixedStyledText('sensors_data_t', style='emphasis')   <emphasis>
                         > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                      SingleStyledText('sensors_data_t')
                    SingleStyledText(' struct encapsulates all control...')
                MixedStyledText('The struct serves as the data pa...')
                  MixedStyledText('The struct serves as the data pa...')
                    SingleStyledText('The struct serves as the data pa...')
                    MixedStyledText('sensors_data_t', style='emphasis')   <emphasis>
                         > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                      SingleStyledText('sensors_data_t')
                    SingleStyledText(' struct encapsulates all control...')
            CodeBlock('typedef struct {\n    int        ...')   data.rst:9   <literal_block>
                 > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                   (0,0,0,0,1) body [Sphinx] > default
                MixedStyledText('typedef struct {\n    int        ...')
                  MixedStyledText('typedef struct {\n    int        ...')
                    Token('typedef', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('struct', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('{', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('         ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('x_axis', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('             ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('// Joystick x-position\n', type=Token.Comment.Single)
                         > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                    Token('    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('         ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('y_axis', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('             ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('// Joystick y-position\n', type=Token.Comment.Single)
                         > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                    Token('    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('bool', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('        ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('nav_bttn', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('           ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('// Joystick push button\n', type=Token.Comment.Single)
                         > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                    Token('    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('bool', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('        ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('led', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('                ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('// LED ON/OFF state\n', type=Token.Comment.Single)
                         > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                    Token('    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('uint8_t', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('     ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor1_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('     ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('// PWMs for 4 DC motors\n', type=Token.Comment.Single)
                         > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                    Token('    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('uint8_t', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('     ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor2_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('uint8_t', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('     ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor3_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('uint8_t', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token('     ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor4_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('}', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('__attribute__', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token('((', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('packed', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token('))', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('sensors_data_t', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
            CodeBlock('struct motors_rpm {\n    int moto...')   data.rst:22   <literal_block>
                 > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                   (0,0,0,0,1) body [Sphinx] > default
                MixedStyledText('struct motors_rpm {\n    int moto...')
                  MixedStyledText('struct motors_rpm {\n    int moto...')
                    Token('struct', type=Token.Keyword)
                         > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motors_rpm', type=Token.Name.Class)
                         > (0,0,0,1,2) (pygments)Token.Name.Class [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('{', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor1_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor2_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor3_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n    ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('int', type=Token.Keyword.Type)
                         > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                    Token(' ', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('motor4_rpm_pwm', type=Token.Name)
                         > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                    Token(';', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                    Token('};', type=Token.Punctuation)
                         > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                    Token('\n', type=Token.Text.Whitespace)
                         > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
            Paragraph('When used with communication pro...')   data.rst:31   <paragraph>
                 > (0,0,0,0,2) body [Sphinx] > default
                MixedStyledText('When used with communication pro...')
                  MixedStyledText('When used with communication pro...')
                    SingleStyledText('When used with communication pro...')
                    MixedStyledText('encoded', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('encoded')
                    SingleStyledText(' into a byte stream, then ')
                MixedStyledText('When used with communication pro...')
                  MixedStyledText('When used with communication pro...')
                    SingleStyledText('When used with communication pro...')
                    MixedStyledText('encoded', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('encoded')
                    SingleStyledText(' into a byte stream, then ')
                    MixedStyledText('transmitted', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('transmitted')
                    SingleStyledText(' at regular intervals or in resp...')
                    MixedStyledText('decoded', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('decoded')
                    SingleStyledText(' on the receiving end to control...')
                MixedStyledText('When used with communication pro...')
                  MixedStyledText('When used with communication pro...')
                    SingleStyledText('When used with communication pro...')
                    MixedStyledText('encoded', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('encoded')
                    SingleStyledText(' into a byte stream, then ')
                    MixedStyledText('transmitted', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('transmitted')
                    SingleStyledText(' at regular intervals or in resp...')
                    MixedStyledText('decoded', style='strong')   <strong>
                         > (0,0,1,0,1) strong [Sphinx] > DEFAULT
                      SingleStyledText('decoded')
                    SingleStyledText(' on the receiving end to control...')
            Admonition()   data.rst:35   <admonition>
                 > (0,0,0,0,2) admonition [Sphinx] > DEFAULT
              Paragraph('What is struct?', style='title')
                   > (0,0,1,0,4) admonition title [Sphinx] > body
                     (0,0,1,0,2) title [Sphinx] > default
                     (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('What is struct?')
                    MixedStyledText('What is struct?')   data.rst:35   <title>
                      SingleStyledText('What is struct?')
              Paragraph('In C programming, a struct (shor...')   data.rst:37   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('In C programming, a struct (shor...')
                    MixedStyledText('In C programming, a struct (shor...')
                      SingleStyledText('In C programming, a struct (shor...')
                  MixedStyledText('In C programming, a struct (shor...')
                    MixedStyledText('In C programming, a struct (shor...')
                      SingleStyledText('In C programming, a struct (shor...')
                  MixedStyledText('In C programming, a struct (shor...')
                    MixedStyledText('In C programming, a struct (shor...')
                      SingleStyledText('In C programming, a struct (shor...')
                  MixedStyledText('In C programming, a struct (shor...')
                    MixedStyledText('In C programming, a struct (shor...')
                      SingleStyledText('In C programming, a struct (shor...')
            Section(id='%data#data-payload')   data.rst:43   <section>
              Heading('3.1 Data Payload')   data.rst:43   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('3.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('3.1')
                    SingleStyledText(' ')
                  MixedStyledText('Data Payload')
                    MixedStyledText('Data Payload')
                      SingleStyledText('Data Payload')
              Paragraph('x_axis and y_axis fields capture...')   data.rst:45   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('x_axis and y_axis fields capture...')
                    MixedStyledText('x_axis and y_axis fields capture...')
                      MixedStyledText('x_axis', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('x_axis')
                      SingleStyledText(' and ')
                      MixedStyledText('y_axis', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('y_axis')
                      SingleStyledText(' fields capture analog input fro...')
                      MixedStyledText('nav_bttn', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('nav_bttn')
                      SingleStyledText(' represents a joystick push-butt...')
                  MixedStyledText('x_axis and y_axis fields capture...')
                    MixedStyledText('x_axis and y_axis fields capture...')
                      MixedStyledText('x_axis', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('x_axis')
                      SingleStyledText(' and ')
                      MixedStyledText('y_axis', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('y_axis')
                      SingleStyledText(' fields capture analog input fro...')
                      MixedStyledText('nav_bttn', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('nav_bttn')
                      SingleStyledText(' represents a joystick push-butt...')
              Paragraph('led allows the transmitter to to...')   data.rst:48   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('led allows the transmitter to to...')
                    MixedStyledText('led allows the transmitter to to...')
                      MixedStyledText('led', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('led')
                      SingleStyledText(' allows the transmitter to toggl...')
                  MixedStyledText('led allows the transmitter to to...')
                    MixedStyledText('led allows the transmitter to to...')
                      MixedStyledText('led', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('led')
                      SingleStyledText(' allows the transmitter to toggl...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		11')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		11')
          MixedStyledText('		11')
            Tab('	')
            Tab('	')
            Field('11')
              SingleStyledText('11')
---------------------------------- page 12 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%data')   index.rst   <start_of_file>
          (continued) Section(id='%data#data-structs')   data.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            (continued) Section(id='%data#data-payload')   data.rst:43   <section>
              Paragraph('motor1_rpm_pwm to motor4_rpm_pwm...')   data.rst:50   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                    MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                      MixedStyledText('motor1_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor1_rpm_pwm')
                      SingleStyledText(' to ')
                      MixedStyledText('motor4_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor4_rpm_pwm')
                      SingleStyledText(' provide individual PWM signals ...')
                  MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                    MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                      MixedStyledText('motor1_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor1_rpm_pwm')
                      SingleStyledText(' to ')
                      MixedStyledText('motor4_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor4_rpm_pwm')
                      SingleStyledText(' provide individual PWM signals ...')
                  MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                    MixedStyledText('motor1_rpm_pwm to motor4_rpm_pwm...')
                      MixedStyledText('motor1_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor1_rpm_pwm')
                      SingleStyledText(' to ')
                      MixedStyledText('motor4_rpm_pwm', style='emphasis')   <emphasis>
                           > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                        SingleStyledText('motor4_rpm_pwm')
                      SingleStyledText(' provide individual PWM signals ...')
              Section(id='%data#why-use-attribute-packed')   data.rst:54   <section>
                Heading('3.1.1 Why use __attribute((packe...')   data.rst:54   <title>
                     > (0,0,0,1,2) heading level 3 [Sphinx] > heading level 2
                       (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                    MixedStyledText('3.1.1 ', style='label')
                         x (0,0,1,1,3) heading level 3 label
                      SingleStyledText('')
                      SingleStyledText('3.1.1')
                      SingleStyledText(' ')
                    MixedStyledText('Why use __attribute((packed))?')
                      MixedStyledText('Why use __attribute((packed))?')
                        SingleStyledText('Why use __attribute((packed))?')
                Paragraph('ESP-NOW uses fixed-size data pac...')   data.rst:56   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('ESP-NOW uses fixed-size data pac...')
                      MixedStyledText('ESP-NOW uses fixed-size data pac...')
                        SingleStyledText('ESP-NOW uses fixed-size data pac...')
                        MixedStyledText('__attribute__((packed))', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('__attribute__((packed))')
                        SingleStyledText(' removes compiler-added padding ...')
                Paragraph('As packed attribute tells the co...')   data.rst:58   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('As packed attribute tells the co...')
                      MixedStyledText('As packed attribute tells the co...')
                        SingleStyledText('As ')
                        MixedStyledText('packed', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('packed')
                        SingleStyledText(' attribute tells the compiler no...')
                    MixedStyledText('As packed attribute tells the co...')
                      MixedStyledText('As packed attribute tells the co...')
                        SingleStyledText('As ')
                        MixedStyledText('packed', style='emphasis')   <emphasis>
                             > (0,0,1,0,1) emphasis [Sphinx] > DEFAULT
                          SingleStyledText('packed')
                        SingleStyledText(' attribute tells the compiler no...')
                StaticGroupedFlowables(style='block quote')   data.rst:60   <block_quote>
                     > (0,0,1,0,1) block quote [Sphinx] > DEFAULT
                  List(style='bulleted')   data.rst:60   <bullet_list>
                       > (0,0,1,0,2) bulleted list [Sphinx] > enumerated list
                    ListItem()   data.rst:60   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Compact')   data.rst:60   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Compact')
                              MixedStyledText('Compact')
                                SingleStyledText('Compact')
                    ListItem()   data.rst:61   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Predictable for serialization ov...')   data.rst:61   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Predictable for serialization ov...')
                              MixedStyledText('Predictable for serialization ov...')
                                SingleStyledText('Predictable for serialization ov...')
                    ListItem()   data.rst:62   <list_item>
                         x (0,0,1,0,4) bulleted list item
                      ListItemLabel('•')
                           > (0,0,1,0,6) bulleted list item label [Sphinx] > list item label
                             (0,0,0,0,2) list item label [Sphinx] > default
                          MixedStyledText('•')
                            SingleStyledText('')
                            SingleStyledText('•')
                            SingleStyledText('')
                      StaticGroupedFlowables()
                           > (0,0,0,0,3) list item body [Sphinx] > DEFAULT
                        Paragraph('Ideal for low-latency transmissi...')   data.rst:62   <paragraph>
                             > (0,0,0,0,5) list item paragraph [Sphinx] > default
                               (0,0,0,0,2) body [Sphinx] > default
                            MixedStyledText('Ideal for low-latency transmissi...')
                              MixedStyledText('Ideal for low-latency transmissi...')
                                SingleStyledText('Ideal for low-latency transmissi...')
                Paragraph('This ensures the receiver interp...')   data.rst:64   <paragraph>
                     > (0,0,0,0,2) body [Sphinx] > default
                    MixedStyledText('This ensures the receiver interp...')
                      MixedStyledText('This ensures the receiver interp...')
                        SingleStyledText('This ensures the receiver interp...')
                    MixedStyledText('This ensures the receiver interp...')
                      MixedStyledText('This ensures the receiver interp...')
                        SingleStyledText('This ensures the receiver interp...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('12		Chapter 3.  DATA STRUCTS')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('12		Chapter 3.  DATA STRUCTS')
          MixedStyledText('12		Chapter 3.  DATA STRUCTS')
            Field('12')
              SingleStyledText('12')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('3')
              SingleStyledText('3')
            SingleStyledText('.  ')
            Field('DATA STRUCTS')
              MixedStyledText('DATA STRUCTS')
                MixedStyledText('DATA STRUCTS')
                  SingleStyledText('DATA STRUCTS')
---------------------------------- page 13 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 4', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 4')
        MixedStyledText('Chapter 4')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('4', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('4')
  Paragraph('TRANSMITTER', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('TRANSMITTER')
        MixedStyledText('TRANSMITTER')
          MixedStyledText('TRANSMITTER')
            SingleStyledText('TRANSMITTER')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%transmitter')   index.rst   <start_of_file>
          Section(id='%transmitter#transmitter')   transmitter.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%transmitter#configuration-variables')   transmitter.rst:5   <section>
              Heading('4.1 Configuration Variables')   transmitter.rst:5   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('4.1')
                    SingleStyledText(' ')
                  MixedStyledText('Configuration Variables')
                    MixedStyledText('Configuration Variables')
                      SingleStyledText('Configuration Variables')
              CodeBlock('uint8_t receiver_mac[ESP_NOW_ETH...')   transmitter.rst:7   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('uint8_t receiver_mac[ESP_NOW_ETH...')
                    MixedStyledText('uint8_t receiver_mac[ESP_NOW_ETH...')
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('receiver_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_NOW_ETH_ALEN', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(']', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('  ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0xe4', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0xb0', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x63', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x17', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x9e', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x44', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token('};', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('typedef', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('struct', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('         ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('             ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick x-position\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('         ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('             ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick y-position\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('bool', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_btn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('            ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick push button\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('bool', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('led', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('                ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// LED ON/OFF state\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// PWMs for each DC motor\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('__attribute__', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('((', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('packed', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('))', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%transmitter#reading-joystick-x-and-y-axis-values')   transmitter.rst:23   <section>
              Heading('4.2 Reading Joystick x- and y- A...')   transmitter.rst:23   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.2 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('4.2')
                    SingleStyledText(' ')
                  MixedStyledText('Reading Joystick x- and y- Axis ...')
                    MixedStyledText('Reading Joystick x- and y- Axis ...')
                      SingleStyledText('Reading Joystick x- and y- Axis ...')
            Section(id='%transmitter#sending-ecapsulating-data')   transmitter.rst:26   <section>
              Heading('4.3 Sending & Ecapsulating Data')   transmitter.rst:26   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.3 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('4.3')
                    SingleStyledText(' ')
                  MixedStyledText('Sending & Ecapsulating Data')
                    MixedStyledText('Sending & Ecapsulating Data')
                      SingleStyledText('Sending & Ecapsulating Data')
              CodeBlock('void sendData (void) {\n\n    ... ...')   transmitter.rst:28   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('void sendData (void) {\n\n    ... ...')
                    MixedStyledText('void sendData (void) {\n\n    ... ...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call ESP-NOW function to send...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('void sendData (void) {\n\n    ... ...')
                    MixedStyledText('void sendData (void) {\n\n    ... ...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call ESP-NOW function to send...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('result', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_send', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('((', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('receiver_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('&', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sizeof', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('void sendData (void) {\n\n    ... ...')
                    MixedStyledText('void sendData (void) {\n\n    ... ...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sendData', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Call ESP-NOW function to send...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('result', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_send', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('((', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('receiver_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('&', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sizeof', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buffer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		13')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		13')
          MixedStyledText('		13')
            Tab('	')
            Tab('	')
            Field('13')
              SingleStyledText('13')
---------------------------------- page 14 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%transmitter')   index.rst   <start_of_file>
          (continued) Section(id='%transmitter#transmitter')   transmitter.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%transmitter#main-function')   transmitter.rst:46   <section>
              Heading('4.4 Main Function')   transmitter.rst:46   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('4.4 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('4.4')
                    SingleStyledText(' ')
                  MixedStyledText('Main Function')
                    MixedStyledText('Main Function')
                      SingleStyledText('Main Function')
              CodeBlock('#include "freertos/FreeRTOS.h"\n#...')   transmitter.rst:48   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('#include "freertos/FreeRTOS.h"\n#...')
                    MixedStyledText('#include "freertos/FreeRTOS.h"\n#...')
                      Token('#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"freertos/FreeRTOS.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"nvs_flash.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"esp_err.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('app_main', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Initialize internal temperatu...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('chip_sensor_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Initialize NVS\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_err_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('if', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NO_FREE_PAGES', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('||', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NEW_VERSION_FOUND', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('#include "freertos/FreeRTOS.h"\n#...')
                    MixedStyledText('#include "freertos/FreeRTOS.h"\n#...')
                      Token('#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"freertos/FreeRTOS.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"nvs_flash.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"esp_err.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('app_main', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Initialize internal temperatu...', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('chip_sensor_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Initialize NVS\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_err_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('if', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NO_FREE_PAGES', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('||', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NEW_VERSION_FOUND', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_erase', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('()', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('wifi_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('joystick_adc_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmission_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('system_led_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('14		Chapter 4.  TRANSMITTER')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('14		Chapter 4.  TRANSMITTER')
          MixedStyledText('14		Chapter 4.  TRANSMITTER')
            Field('14')
              SingleStyledText('14')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('4')
              SingleStyledText('4')
            SingleStyledText('.  ')
            Field('TRANSMITTER')
              MixedStyledText('TRANSMITTER')
                MixedStyledText('TRANSMITTER')
                  SingleStyledText('TRANSMITTER')
---------------------------------- page 15 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 5', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 5')
        MixedStyledText('Chapter 5')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('5', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('5')
  Paragraph('RECEIVER', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('RECEIVER')
        MixedStyledText('RECEIVER')
          MixedStyledText('RECEIVER')
            SingleStyledText('RECEIVER')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%receiver')   index.rst   <start_of_file>
          Section(id='%receiver#receiver')   receiver.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%receiver#configuration-variables')   receiver.rst:5   <section>
              Heading('5.1 Configuration Variables')   receiver.rst:5   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('5.1')
                    SingleStyledText(' ')
                  MixedStyledText('Configuration Variables')
                    MixedStyledText('Configuration Variables')
                      SingleStyledText('Configuration Variables')
              CodeBlock('uint8_t transmitter_mac[ESP_NOW_...')   receiver.rst:7   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('uint8_t transmitter_mac[ESP_NOW_...')
                    MixedStyledText('uint8_t transmitter_mac[ESP_NOW_...')
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitter_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_NOW_ETH_ALEN', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(']', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x9C', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x9E', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x6E', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x14', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0xB5', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0x54', type=Token.Literal.Number.Hex)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Hex [FriendlyStyle (pygments)] > DEFAULT
                      Token('};', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('typedef', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('struct', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('         ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('             ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick x-position\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('         ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('             ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick y-position\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('bool', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nav_bttn', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('           ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Joystick push button\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('bool', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('led', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('                ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// LED ON/OFF state\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// PWMs for 4 DC motors\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('     ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('__attribute__', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('((', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('packed', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('))', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sensors_data_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
              CodeBlock('struct motors_rpm {\n    int moto...')   receiver.rst:22   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('struct motors_rpm {\n    int moto...')
                    MixedStyledText('struct motors_rpm {\n    int moto...')
                      Token('struct', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motors_rpm', type=Token.Name.Class)
                           > (0,0,0,1,2) (pygments)Token.Name.Class [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor1_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor2_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor3_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('int', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('motor4_rpm_pwm', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('};', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
            Section(id='%receiver#receiving-extracting-data')   receiver.rst:32   <section>
              Heading('5.2 Receiving & Extracting Data')   receiver.rst:32   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.2 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('5.2')
                    SingleStyledText(' ')
                  MixedStyledText('Receiving & Extracting Data')
                    MixedStyledText('Receiving & Extracting Data')
                      SingleStyledText('Receiving & Extracting Data')
              CodeBlock('void onDataReceived (const uint8...')   receiver.rst:34   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('void onDataReceived (const uint8...')
                    MixedStyledText('void onDataReceived (const uint8...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('void onDataReceived (const uint8...')
                    MixedStyledText('void onDataReceived (const uint8...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Data received from: %02x:%02x:%...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('void onDataReceived (const uint8...')
                    MixedStyledText('void onDataReceived (const uint8...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Data received from: %02x:%02x:%...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('1', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('2', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('3', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('4', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('5', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                  MixedStyledText('void onDataReceived (const uint8...')
                    MixedStyledText('void onDataReceived (const uint8...')
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name.Function)
                           > (0,0,0,1,2) (pygments)Token.Name.Function [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('const', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('uint8_t', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_LOGI', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('TAG', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"Data received from: %02x:%02x:%...', type=Token.Literal.String)
                           > (0,0,0,1,2) (pygments)Token.Literal.String [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('1', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('2', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('3', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('4', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('mac_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('[', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('5', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('],', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data_len', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('memcpy', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('&', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('data', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('sizeof', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('x_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('buf', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('y_axis', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		15')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		15')
          MixedStyledText('		15')
            Tab('	')
            Tab('	')
            Field('15')
              SingleStyledText('15')
---------------------------------- page 16 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%receiver')   index.rst   <start_of_file>
          (continued) Section(id='%receiver#receiver')   receiver.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%receiver#main-function')   receiver.rst:52   <section>
              Heading('5.3 Main Function')   receiver.rst:52   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('5.3 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('5.3')
                    SingleStyledText(' ')
                  MixedStyledText('Main Function')
                    MixedStyledText('Main Function')
                      SingleStyledText('Main Function')
              CodeBlock('#include <string.h>\n#include "fr...')   receiver.rst:54   <literal_block>
                   > (1,0,0,0,2) code block [Sphinx] > DEFAULT
                     (0,0,0,0,1) body [Sphinx] > default
                  MixedStyledText('#include <string.h>\n#include "fr...')
                    MixedStyledText('#include <string.h>\n#include "fr...')
                      Token('#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('<string.h>', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"freertos/FreeRTOS.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"nvs_flash.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n#include', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('"esp_err.h"', type=Token.Comment.PreprocFile)
                           > (0,0,0,1,2) (pygments)Token.Comment.PreprocFile [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Comment.Preproc)
                           > (0,0,0,1,2) (pygments)Token.Comment.Preproc [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('app_main', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Initialize NVS\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_err_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('if', type=Token.Keyword)
                           > (0,0,0,1,2) (pygments)Token.Keyword [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NO_FREE_PAGES', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('||', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('==', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERR_NVS_NEW_VERSION_FOUND', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_erase', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('()', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n        ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('nvs_flash_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ret', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('wifi_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('());', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_peer_info_t', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('{', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token('};', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('memcpy', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('peer_addr', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitter_mac', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(',', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_NOW_ETH_ALEN', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(');', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('channel', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('0', type=Token.Literal.Number.Integer)
                           > (0,0,0,1,2) (pygments)Token.Literal.Number.Integer [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('// Current WiFi channel\n', type=Token.Comment.Single)
                           > (0,0,0,1,2) (pygments)Token.Comment.Single [FriendlyStyle (pygments)] > DEFAULT
                      Token('    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('ifidx', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_IF_WIFI_STA', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('.', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('encrypt', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('=', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('false', type=Token.Name.Builtin)
                           > (0,0,0,1,2) (pygments)Token.Name.Builtin [FriendlyStyle (pygments)] > DEFAULT
                      Token(';', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_add_peer', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('&', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token('transmitterInfo', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('ESP_ERROR_CHECK', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('(', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('esp_now_register_recv_cb', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('((', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('void', type=Token.Keyword.Type)
                           > (0,0,0,1,2) (pygments)Token.Keyword.Type [FriendlyStyle (pygments)] > DEFAULT
                      Token('*', type=Token.Operator)
                           > (0,0,0,1,2) (pygments)Token.Operator [FriendlyStyle (pygments)] > DEFAULT
                      Token(')', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('onDataReceived', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('));', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('system_led_init', type=Token.Name)
                           > (0,0,0,1,2) (pygments)Token.Name [FriendlyStyle (pygments)] > DEFAULT
                      Token('();', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n    ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token(' ', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('...', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
                      Token('}', type=Token.Punctuation)
                           > (0,0,0,1,2) (pygments)Token.Punctuation [FriendlyStyle (pygments)] > DEFAULT
                      Token('\n', type=Token.Text.Whitespace)
                           > (0,0,0,1,2) (pygments)Token.Text.Whitespace [FriendlyStyle (pygments)] > DEFAULT
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('16		Chapter 5.  RECEIVER')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('16		Chapter 5.  RECEIVER')
          MixedStyledText('16		Chapter 5.  RECEIVER')
            Field('16')
              SingleStyledText('16')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('5')
              SingleStyledText('5')
            SingleStyledText('.  ')
            Field('RECEIVER')
              MixedStyledText('RECEIVER')
                MixedStyledText('RECEIVER')
                  SingleStyledText('RECEIVER')
---------------------------------- page 17 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 6', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 6')
        MixedStyledText('Chapter 6')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('6', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('6')
  Paragraph('WORK-IN-PROGRESS WALK THROUGH', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('WORK-IN-PROGRESS WALK THROUGH')
        MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
          MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
            SingleStyledText('WORK-IN-PROGRESS WALK THROUGH')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%progress')   index.rst   <start_of_file>
          Section(id='%progress#work-in-progress-walk-through')   progress.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%progress#finished-work')   progress.rst:5   <section>
              Heading('6.1 Finished Work')   progress.rst:5   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('6.1')
                    SingleStyledText(' ')
                  MixedStyledText('Finished Work')
                    MixedStyledText('Finished Work')
                      SingleStyledText('Finished Work')
              Image('_static/ESP-IDF_Robot.jpg')   progress.rst:7   <image>
                   > (0,0,0,0,2) image [Sphinx] > DEFAULT
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		17')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		17')
          MixedStyledText('		17')
            Tab('	')
            Tab('	')
            Field('17')
              SingleStyledText('17')
---------------------------------- page 18 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%progress')   index.rst   <start_of_file>
          (continued) Section(id='%progress#work-in-progress-walk-through')   progress.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%progress#chassis')   progress.rst:10   <section>
              Heading('6.2 Chassis')   progress.rst:10   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.2 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('6.2')
                    SingleStyledText(' ')
                  MixedStyledText('Chassis')
                    MixedStyledText('Chassis')
                      SingleStyledText('Chassis')
              Figure(id='%progress#id1')   progress.rst:12   <figure>
                   > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                Image('_static/chassi-progress_002d.jpg')   progress.rst:12   <image>
                     > (0,0,0,0,4) figure image [Sphinx] > image
                       (0,0,0,0,2) image [Sphinx] > DEFAULT
                Caption('Figure 6.1. Completed chassis wi...')   progress.rst:16   <caption>
                     > (0,0,0,0,4) figure caption [Sphinx] > caption
                    StringField('Figure')
                      SingleStyledText('Figure')
                    SingleStyledText(' ')
                    MixedStyledText('6.1. ', style='label')
                      SingleStyledText('')
                      SingleStyledText('6.1')
                      SingleStyledText('. ')
                    MixedStyledText('Completed chassis with only DC m...')
                      MixedStyledText('Completed chassis with only DC m...')
                        SingleStyledText('Completed chassis with only DC m...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('18		Chapter 6.  WORK-IN-PROGRESS...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('18		Chapter 6.  WORK-IN-PROGRESS...')
          MixedStyledText('18		Chapter 6.  WORK-IN-PROGRESS...')
            Field('18')
              SingleStyledText('18')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('WORK-IN-PROGRESS WALK THROUGH')
              MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                  SingleStyledText('WORK-IN-PROGRESS WALK THROUGH')
---------------------------------- page 19 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%progress')   index.rst   <start_of_file>
          (continued) Section(id='%progress#work-in-progress-walk-through')   progress.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%progress#wiring')   progress.rst:19   <section>
              Heading('6.3 Wiring')   progress.rst:19   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.3 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('6.3')
                    SingleStyledText(' ')
                  MixedStyledText('Wiring')
                    MixedStyledText('Wiring')
                      SingleStyledText('Wiring')
              Figure(id='%progress#id2')   progress.rst:21   <figure>
                   > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                Image('_static/chassi-progress_003a.jpg')   progress.rst:21   <image>
                     > (0,0,0,0,4) figure image [Sphinx] > image
                       (0,0,0,0,2) image [Sphinx] > DEFAULT
                Caption('Figure 6.2. Completed wiring.')   progress.rst:25   <caption>
                     > (0,0,0,0,4) figure caption [Sphinx] > caption
                    StringField('Figure')
                      SingleStyledText('Figure')
                    SingleStyledText(' ')
                    MixedStyledText('6.2. ', style='label')
                      SingleStyledText('')
                      SingleStyledText('6.2')
                      SingleStyledText('. ')
                    MixedStyledText('Completed wiring.')
                      MixedStyledText('Completed wiring.')
                        SingleStyledText('Completed wiring.')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('		Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('		Byte Rider, Release 06-2025')
          MixedStyledText('		Byte Rider, Release 06-2025')
            Tab('	')
            Tab('	')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('6.3.  Wiring		19')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('6.3.  Wiring		19')
          MixedStyledText('6.3.  Wiring		19')
            Field('6.3')
              SingleStyledText('6.3')
            SingleStyledText('.  ')
            Field('Wiring')
              MixedStyledText('Wiring')
                MixedStyledText('Wiring')
                  SingleStyledText('Wiring')
            Tab('	')
            Tab('	')
            Field('19')
              SingleStyledText('19')
---------------------------------- page 20 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### DownExpandingContainer('floats')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        (continued) StaticGroupedFlowables(id='%progress')   index.rst   <start_of_file>
          (continued) Section(id='%progress#work-in-progress-walk-through')   progress.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%progress#motor-wires-harness')   progress.rst:28   <section>
              Heading('6.4 Motor Wires Harness')   progress.rst:28   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('6.4 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('6.4')
                    SingleStyledText(' ')
                  MixedStyledText('Motor Wires Harness')
                    MixedStyledText('Motor Wires Harness')
                      SingleStyledText('Motor Wires Harness')
              Figure(id='%progress#id3')   progress.rst:30   <figure>
                   > (0,0,0,0,2) figure [Sphinx] > DEFAULT
                Image('_static/motors-wiring-harness-001.jpg')   progress.rst:30   <image>
                     > (0,0,0,0,4) figure image [Sphinx] > image
                       (0,0,0,0,2) image [Sphinx] > DEFAULT
                Caption('Figure 6.3. DC Motors wires secu...')   progress.rst:33   <caption>
                     > (0,0,0,0,4) figure caption [Sphinx] > caption
                    StringField('Figure')
                      SingleStyledText('Figure')
                    SingleStyledText(' ')
                    MixedStyledText('6.3. ', style='label')
                      SingleStyledText('')
                      SingleStyledText('6.3')
                      SingleStyledText('. ')
                    MixedStyledText('DC Motors wires secured inside h...')
                      MixedStyledText('DC Motors wires secured inside h...')
                        SingleStyledText('DC Motors wires secured inside h...')
#### UpExpandingContainer('header')
  StaticGroupedFlowables()
    Header('Byte Rider, Release 06-2025')
         > (0,0,0,0,2) header [Sphinx] > header_footer
        MixedStyledText('Byte Rider, Release 06-2025')
          MixedStyledText('Byte Rider, Release 06-2025')
            Field('Byte Rider')
              SingleStyledText('Byte Rider')
            SingleStyledText(', ')
            Field('Release 06-2025')
              SingleStyledText('Release 06-2025')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('20		Chapter 6.  WORK-IN-PROGRESS...')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('20		Chapter 6.  WORK-IN-PROGRESS...')
          MixedStyledText('20		Chapter 6.  WORK-IN-PROGRESS...')
            Field('20')
              SingleStyledText('20')
            Tab('	')
            Tab('	')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
            Field('6')
              SingleStyledText('6')
            SingleStyledText('.  ')
            Field('WORK-IN-PROGRESS WALK THROUGH')
              MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                MixedStyledText('WORK-IN-PROGRESS WALK THROUGH')
                  SingleStyledText('WORK-IN-PROGRESS WALK THROUGH')
---------------------------------- page 21 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### FlowablesContainer('chapter title')
  Paragraph('Chapter 7', style='body matter chapter label')
       > (0,0,1,0,2) body matter chapter label [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      MixedStyledText('Chapter 7')
        MixedStyledText('Chapter 7')
          MixedStyledText('Chapter ')
            StringField('Chapter')
              SingleStyledText('Chapter')
            SingleStyledText(' ')
          Field('7', style='number')
               > (0,0,2,0,3) body matter chapter number [Sphinx] > DEFAULT
            SingleStyledText('7')
  Paragraph('REFERENCES', style='body matter chapter title')
       > (0,0,1,0,2) body matter chapter title [Sphinx] > DEFAULT
         (0,0,0,0,2) body [Sphinx] > default
      Field('REFERENCES')
        MixedStyledText('REFERENCES')
          MixedStyledText('REFERENCES')
            SingleStyledText('REFERENCES')
#### ChainedContainer('column1')
  (continued) StaticGroupedFlowables()
    (continued) DocumentTree()   index.rst   <document>
      (continued) StaticGroupedFlowables()   index.rst   <compound>
        StaticGroupedFlowables(id='%references')   index.rst   <start_of_file>
          Section(id='%references#references')   references.rst:2   <section>
               > (0,0,0,1,4) content chapter [Sphinx] > chapter
                 (0,0,0,1,2) chapter [Sphinx] > DEFAULT
            Section(id='%references#github')   references.rst:5   <section>
              Heading('7.1 GitHub')   references.rst:5   <title>
                   > (0,0,0,1,2) heading level 2 [Sphinx] > heading level 1
                     (0,0,0,0,2) other heading levels [Sphinx] > heading level 5
                  MixedStyledText('7.1 ', style='label')
                       x (0,0,1,1,3) heading level 2 label
                    SingleStyledText('')
                    SingleStyledText('7.1')
                    SingleStyledText(' ')
                  MixedStyledText('GitHub')
                    MixedStyledText('GitHub')
                      SingleStyledText('GitHub')
              Paragraph('Complete source code with README...')   references.rst:7   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('Complete source code with README...')
                    MixedStyledText('Complete source code with README...')
                      SingleStyledText('Complete source ')
                      MixedStyledText('code', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('code')
                      SingleStyledText(' with README.md file: ')
                      MixedStyledText('https://github.com/alexandrebobk...', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('https://github.com/alexandrebobk...')
                  MixedStyledText('Complete source code with README...')
                    MixedStyledText('Complete source code with README...')
                      SingleStyledText('Complete source ')
                      MixedStyledText('code', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('code')
                      SingleStyledText(' with README.md file: ')
                      MixedStyledText('https://github.com/alexandrebobk...', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('https://github.com/alexandrebobk...')
              Paragraph('KiCAd Schematic and PCB design: ...')   references.rst:11   <paragraph>
                   > (0,0,0,0,2) body [Sphinx] > default
                  MixedStyledText('KiCAd Schematic and PCB design: ...')
                    MixedStyledText('KiCAd Schematic and PCB design: ...')
                      SingleStyledText('KiCAd ')
                      MixedStyledText('Schematic', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('Schematic')
                      SingleStyledText(' and PCB design: ')
                      MixedStyledText('https://github.com/alexandrebobk...', style='external link')   <reference>
                           > (0,0,1,0,1) external hyperlink [Sphinx] > DEFAULT
                        SingleStyledText('https://github.com/alexandrebobk...')
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		21')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		21')
          MixedStyledText('		21')
            Tab('	')
            Tab('	')
            Field('21')
              SingleStyledText('21')
---------------------------------- page 23 ----------------------------------
#### FlowablesContainer('background')
  StaticGroupedFlowables()
#### FootnoteContainer('footnotes')
  StaticGroupedFlowables()
#### ChainedContainer('column1')
  StaticGroupedFlowables()
    StaticGroupedFlowables()
#### ChainedContainer('column2')
  StaticGroupedFlowables()
#### DownExpandingContainer('footer')
  StaticGroupedFlowables()
    Footer('		23')
         > (0,0,0,0,2) footer [Sphinx] > header_footer
        MixedStyledText('		23')
          MixedStyledText('		23')
            Tab('	')
            Tab('	')
            Field('23')
              SingleStyledText('23')
